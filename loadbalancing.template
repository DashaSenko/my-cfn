AWSTemplateFormatVersion: 2010-09-09
Description: ---
Parameters:
  Route53HostedZoneId:
    Description: Route53 Public Hosted Zone "satoru.ml" Id
    Type: String
    Default: Z09882201OF75I5PO0UV9
  Route53SiteName:
    Description: Route53 DNS (Site) Name
    Type: String
    Default: my-final-task.satoru.ml
  ApplicationLoadBalancerName:
    Description: Name for ALB, that routes incoming requests to Ecs
    Type: String
    Default: EcsLoadBalancer
  EcsEc2TargetGroupName:
    Description: Name for ALB Target Group that hanldes Ecs Ec2 instances
    Type: String
    Default: EcsEc2TargetGroup
Resources:
  ApplicationLoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Allow all incoming http/https traffic for LoadBalancer"
      VpcId: !ImportValue VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: Application LoadBalancer Security Group

  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Type: application
      IpAddressType: ipv4
      Name: !Ref ApplicationLoadBalancerName
      Scheme: internet-facing
      SecurityGroups:
        - !Ref ApplicationLoadBalancerSecurityGroup
      Subnets: 
      - !ImportValue PublicSubnet1
      - !ImportValue PublicSubnet2
  
  ApplicationLoadBalancerTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      TargetType: instance
      Name: !Ref EcsEc2TargetGroupName
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes: 
        - 
          Key: deregistration_delay.timeout_seconds
          Value: 30
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: /
      HealthCheckPort: traffic-port
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 3
      IpAddressType: ipv4
      Matcher: 
        HttpCode: 200-299
      VpcId: !ImportValue VPC
      Tags:
        - Key: Name
          Value: !Ref EcsEc2TargetGroupName

  HttpAplicationLoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions: 
        -
          Order: 1
          RedirectConfig:
            Protocol: HTTPS
            Port: 443
            Host: "#{host}"
            Path: "/#{path}"
            Query: "#{query}"
            StatusCode: "HTTP_301"
          Type: redirect
  
  HttpSAplicationLoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 443
      Protocol: HTTPS
      Certificates:
        - 
          CertificateArn: arn:aws:acm:eu-central-1:616750136093:certificate/55492213-9c80-455c-a119-9074a48b2ab6
      DefaultActions: 
        -
          Order: 1
          FixedResponseConfig:
            ContentType: text/plain
            MessageBody: "Not found"
            StatusCode: 503
          Type: fixed-response

  ForwardTrafficToEcsInstancesListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties: 
      Actions:
        - Type: forward
          TargetGroupArn: !Ref ApplicationLoadBalancerTargetGroup
      Conditions:
        - Field: host-header
          HostHeaderConfig:
            Values:
              - !Ref Route53SiteName
      ListenerArn: !Ref HttpSAplicationLoadBalancerListener
      Priority: 2

  Route53DNSName:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneId: !Ref Route53HostedZoneId
      RecordSets:
      - Name: !Ref Route53SiteName
        Type: A
        AliasTarget:
          HostedZoneId: !GetAtt  ApplicationLoadBalancer.CanonicalHostedZoneID #
          DNSName: !GetAtt ApplicationLoadBalancer.DNSName
          EvaluateTargetHealth: false

Outputs:
  ApplicationLoadBalancerTargetGroup:
    Description: Reference to the created Target Group for ECS
    Value: !Ref ApplicationLoadBalancerTargetGroup
    Export:
      Name: ApplicationLoadBalancerTargetGroup